let globalData = {}; // –≥–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞, –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —ñ–Ω—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö

document.addEventListener("DOMContentLoaded", async () => {
  try {
    const response = await fetch('Test.xlsx');
    const buffer = await response.arrayBuffer();

    const workbook = XLSX.read(buffer, { type: 'array' });
    const sheets = {};

    workbook.SheetNames.forEach(name => {
      const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[name], { header: 1 });
      sheets[name] = sheet;
    });

    console.log("‚úÖ –î–∞–Ω—ñ –∑—á–∏—Ç–∞–Ω—ñ:", sheets);

    globalData = transformData(sheets);
    console.log("üîÅ –ü—ñ—Å–ª—è –æ–±—Ä–æ–±–∫–∏:", globalData);

    if (typeof initCharts === "function") {
      initCharts(globalData);
    } else {
      console.warn("‚ö†Ô∏è –§—É–Ω–∫—Ü—ñ—è initCharts —â–µ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞!");
    }

  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É Excel:", error);
  }
});

// üîß –ø—Ä–æ—Å—Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö
function transformData(sheets) {
  if (sheets.Sheet1) {
    return sheets;
  }
  return {};
}
