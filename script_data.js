let globalData = {}; // –≥–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞, –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —ñ–Ω—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö

document.addEventListener("DOMContentLoaded", async () => {
  try {
    // 1Ô∏è‚É£ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª Excel
    const response = await fetch('Test.xlsx');
    const buffer = await response.arrayBuffer();

    // 2Ô∏è‚É£ –ß–∏—Ç–∞—î–º–æ –∫–Ω–∏–≥—É Excel
    const workbook = XLSX.read(buffer, { type: 'array' });
    const sheets = {};

    // 3Ô∏è‚É£ –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–∂–µ–Ω –∞—Ä–∫—É—à —É –º–∞—Å–∏–≤ –æ–±‚Äô—î–∫—Ç—ñ–≤
    workbook.SheetNames.forEach(name => {
      const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[name], { header: 1 });
      sheets[name] = sheet;
    });

    console.log("‚úÖ –î–∞–Ω—ñ –∑—á–∏—Ç–∞–Ω—ñ:", sheets);

    // 4Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ join, —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è)
    globalData = transformData(sheets);
    console.log("üîÅ –ü—ñ—Å–ª—è –æ–±—Ä–æ–±–∫–∏:", globalData);

    // 5Ô∏è‚É£ –í–∏–∫–ª–∏–∫ –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ–∫—ñ–≤ (—Ñ—É–Ω–∫—Ü—ñ—è –∑ Chart_logic.js)
    if (typeof initCharts === "function") {
      initCharts(globalData);
    } else {
      console.warn("‚ö†Ô∏è –§—É–Ω–∫—Ü—ñ—è initCharts —â–µ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞!");
    }

  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É Excel:", error);
  }
});

// 6Ô∏è‚É£ –ü—Ä–∏–∫–ª–∞–¥ –ø—Ä–æ—Å—Ç–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –æ–±—Ä–æ–±–∫–∏
function transformData(sheets) {
  // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –æ–±‚Äô—î–¥–Ω—É—î–º–æ –¥–≤–∞ –∞—Ä–∫—É—à—ñ –ø–æ –ø–µ—Ä—à–æ–º—É —Å—Ç–æ–≤–ø—Ü—é
  if (sheets.Sheet1 && sheets.Sheet2) {
    const merged = sheets.Sheet1.map((row, i) => [...row, ...(sheets.Sheet2[i] || [])]);
    return { merged };
  }
  return sheets; // —è–∫—â–æ –æ–¥–∏–Ω –ª–∏—Å—Ç, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ
}
